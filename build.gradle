// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext.kotlin_version = '1.3.10'
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.2.1'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        jcenter()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

ext {
    AppConfig = [
            id         : 'com.mediamonks.testplacesautocomplete',    // ToDo: Replace this with your app id
            versionCode: 1,
            versionName: '1.0',
            debugSuffix: 'debug'
    ]

    ClassPaths = [
            kotlin: "org.jetbrains.kotlin:kotlin-gradle-plugin:1.3.10"
    ]

    Plugins = [
            android_app: 'com.android.application',
            kotlin     : 'kotlin-android',
            kotlin_ext : 'kotlin-android-extensions',
            kotlin_kapt: 'kotlin-kapt'
    ]

    Versions = [
            minSdk     : 21,
            targetSdk  : 28,
            compileSdk : 28,

            // Kotlin
            kotlin     : '1.3.10',

            // Support libraries
            supportLibs: '28.0.0',
            androidx   : '1.0.0',

            // Library versions
            dagger     : '2.11',
            okHttp     : '3.9.1',
            retrofit   : '2.3.0',
            glide      : '4.8.0',
            arch       : '1.1.1',
            lifecycle  : '2.0.0'
    ]

    Libraries = [
            // AndroidX
            androidx_appCompat            : "androidx.appcompat:appcompat:${Versions.androidx}",
            androidx_cardView             : "androidx.cardview:cardview:${Versions.androidx}",
            androidx_annotations          : "androidx.annotation:annotation:${Versions.androidx}",
            androidx_constraintLayout     : 'androidx.constraintlayout:constraintlayout:1.1.2',
            androidx_recyclerview         : "androidx.recyclerview:recyclerview:${Versions.androidx}",

            // Kotlin
            kotlin                        : "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version",
            android_ktx                   : "androidx.core:core-ktx:1.0.1",

            // testing
            test_espresso                 : 'com.android.support.test.espresso:espresso-core:3.0.2',
            test_junit                    : 'junit:junit:4.12',
            test_runner                   : 'android.support.test.runner.AndroidJUnitRunner',

            // Android architecture components
            arch_room                     : "androidx.room:room-runtime:${Versions.arch}",
            annotationProcessor_arch_room : "androidx.room:room-compiler:${Versions.arch}",

            androidx_lifecycle_viewmodel  : "androidx.lifecycle:lifecycle-viewmodel-ktx:${Versions.lifecycle}",
            androidx_lifecycle_ext        : "androidx.lifecycle:lifecycle-extensions:${Versions.lifecycle}",
            annotationProcessor_lifecycle : "androidx.lifecycle:lifecycle-compiler:${Versions.lifecycle}",

            // Play Services
            play_services_maps            : "com.google.android.gms:play-services-maps:16.0.0",
            play_services_places          : "com.google.android.gms:play-services-places:16.0.0",
            play_services_location        : "com.google.android.gms:play-services-location:16.0.0",
            maps_utils                    : "com.google.maps.android:android-maps-utils:0.5+",

            // Dagger
            dagger                        : "com.google.dagger:dagger:${Versions.dagger}",
            dagger_kapt                   : "com.google.dagger:dagger-compiler:${Versions.dagger}",
            dagger_android                : "com.google.dagger:dagger-android:${Versions.dagger}",
            dagger_android_support        : "com.google.dagger:dagger-android-support:${Versions.dagger}",
            dagger_android_kapt           : "com.google.dagger:dagger-android-processor:${Versions.dagger}",
            annotation_jsr250             : "javax.annotation:jsr250-api:1.0",
            annotation_inject             : "javax.inject:javax.inject:1",

            // Butterknife
            butterknife                   : "com.jakewharton:butterknife:${Versions.butterknife}",
            annotationProcessorButterknife: "com.jakewharton:butterknife-compiler:${Versions.butterknife}",

            // RetroFit
            retrofit                      : "com.squareup.retrofit2:retrofit:${Versions.retrofit}",
            retrofit_moshiConverter       : "com.squareup.retrofit2:converter-moshi:${Versions.retrofit}",
            retrofit_rxAdapter            : "com.squareup.retrofit2:adapter-rxjava:${Versions.retrofit}",

            // Rx
            rxAndroid                     : "io.reactivex.rxjava2:rxandroid:2.1.0",
            rxKotlin                      : "io.reactivex.rxjava2:rxkotlin:2.3.0",

            //Image loading
            glide                         : "com.github.bumptech.glide:glide:${Versions.glide}",
            annotationProcessorGlide      : "com.github.bumptech.glide:compiler:${Versions.glide}",

            // Stetho
            stetho                        : "com.facebook.stetho:stetho:1.5.0",

            // OkHttp
            okHttp                        : "com.squareup.okhttp3:okhttp:${Versions.okHttp}",
            okHttp_loggingInterceptor     : "com.squareup.okhttp3:logging-interceptor:${Versions.okHttp}",

            // Logging
            timber                        : "com.github.ajalt:timberkt:1.5.1",

            // Moshi
            moshi                         : 'com.squareup.moshi:moshi:1.6.0',
            moshi_kotlin                  : "com.squareup.moshi:moshi-kotlin:1.7.0",
            moshi_codegen                 : "com.squareup.moshi:moshi-kotlin-codegen:1.7.0",

    ]
}